import java.util.Scanner;

public class BLM {
    public static void main(String[] args) {
        

        String IV = "10001011101011001000110011110000101";
        String IV19 = "1110101100100011001";
        // The scanner takes an input (for now prefereably with no spaces) and converts
        // it into a char array
        // So out methods can use it.
        System.out.println("Enter the plaintext here: ");
        Scanner scan = new Scanner(System.in);
        String input = scan.nextLine();
        scan.close();
        // { 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0,
        // 0, 1, 1, 0, 0, 0, 1, 0, 0, 1 };
        // Make a string of 1's and 0's first and then convert to a char array cause
        // this is easier than typing out
        // all the commas for the key. Also there is a weird interaction when typing
        // integers into a char array
        // when trying to reconvert those integers into numbers again.
        String key = "11010101010100010101111010010010101";

        // ECB Encryption
        System.out.println("--------------------------------ECB--------------------------------");
        System.out.println("Encrypted Text: ");
        String encryptedText = ECB.encrypt(input, key);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(ECB.decrypt(encryptedText, key));

        // CBC Encryption
        System.out.println("--------------------------------CBC--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = CBC.encrypt(input, key, IV);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(CBC.decrypt(encryptedText, key, IV));

        // CFB Encryption
        System.out.println("--------------------------------CFB--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = CFB.encrypt(input, key, IV);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(CFB.decrypt(encryptedText, key, IV));

        // OFB Encryption
        System.out.println("--------------------------------OFB--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = OFB.encrypt(input, key, IV);
        System.out.println(encryptedText+ "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(OFB.decrypt(encryptedText, key, IV));

        // CTR Encryption
        System.out.println("--------------------------------CTR--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = CTR.encrypt(input, key, IV19);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(CTR.decrypt(encryptedText, key, IV19));

        // The 1-bit error, For this test we encrypted: "Potato"

        // ECB encryption:
        // 0100000101100110101010100101000101111001110100100010101111010010010101
        String ECBErrorText = "0110000101100110101010100101000101111001110100100010101111010010010101";
        System.out.println("\nECB Error: " + ECB.decrypt(ECBErrorText, key));

        // CBC encryption:
        // 1111000000010011001110111100111101110110000100100110011100111101011010
        String CBCErrorText = "1111000100010011001110111100111101111110000100100110011100111101011010";
        System.out.println("CBC error: " + CBC.decrypt(CBCErrorText, key, IV));

        // CFB encryption:
        //                     1100010110011011011010010001001000100100111000010011110111011110010011
        String CFBErrorText = "1101010110011011011010010001001000100100111000010011110111011110010011";
        System.out.println("CFB error: " + CFB.decrypt(CFBErrorText, key, IV));

        // OFB encryption:     110001011001101101101001000100100011010011
        String OFBErrorText = "110101011001101101101001000100100011010011";
        System.out.println("OFB error: " + OFB.decrypt(OFBErrorText, key, IV));

        // CTR encryption:     011010011000101010011100100011000010011011
        String CTRErrorText = "011000011000101010011100100011000010011011";
        System.out.println("CTR error: " + CTR.decrypt(CTRErrorText, key, IV19));

    



     // OFB Encryption
     System.out.println("--------------------------------Group decryption--------------------------------");
     encryptedText = "0100101100010110011111001101001110010010100010111100010011111111010101" +
     "0011010010110011110111000101111110000000000100000101010001001001011001" +
     "0011100100101100000001000100101011111101011000101111111000000101010110" +
     "1100100101101000100011101011011000100111101001001110110000001000110001" +
     "0011100111011000001101011011101010110001001000100010111011100010111100" +
     "0001011101011110000111100000001011111101110100001110010001100101010000" +
     "0011110111001000001100001001011100100111011100100011101001011100000100" +
     "1001100101101010110000111111111001101101110000100010110000011000101100" +
     "1000001111011010010101000011001011111101100010000110001001001000100101" +
     "1010011110110000100011101011100001101101010100110101111000110110101001" +
     "0011100101111011101100101100010101001010010000100110010111011011010010" +
     "0110010101111110011111010011101110110001110101101110010001101010111001" +
     "0010011111101110000001001100101000100000110110001111011000000111001100" +
     "0000011010110000111001111011011100100110100111001100100010100111100101" +
     "1011110010110100001100010000010101111110001100101100110011000110010110" +
     "1111110000011000101111000010010010110100101101010110110111110011110110" +
     "1101100011011101010101000011000000100100011001101011101101000100101110" +
     "1100100001101110111000110101010001101010101000001111010110001111001111" +
     "1100101010111010100001000110111111011001101001001010010000000101110001" +
     "0011010110111100111001001010011001001001001100010110110010100110110101" +
     "1011010000001101000101000001010110110010000100110010100101001000001110" +
     "1100100000110001010110001101101101001110111001111100111011111101011001" +
     "0000110011100111111101101110011100100000001101001001011011010111100001" +
     "0000111000101100011110100010010000000010101101101011001101110110100100" +
     "1001010010110110101100111011011001101010011101010101100111010010110000" +
     "0010010001101101101101010010001011011010010100011011011011001100100101" +
     "1001101101101101011011110001111100000010110010100011010110101000011100" +
     "1010111011100000010001000011101100000111111111101001110100101010101000" +
     "1000000111101010010001001110101001101101001000000010100100000111111011" +
     "1110101101001000001110001011011111111101001010110010101111011011100101" +
     "1011001101000011000101110010101110110110010000101000101101001000110111" +
     "0111000001101010110000111110100000010001000000001010110010010001101010" +
     "0111001100000000100101001000101111111001110010010000100011001100010101" +
     "1010110111111101010100010001111111101110011100101111010101001000000000" +
     "1000100000000010101011011111001001001011011001110001000110101111101001" +
     "0010100100001111111111010101111101101001001010101010000111111001011110" +
     "0100111100110010101001010000101110010100100110110100100110011001011001" +
     "0011011010000011001010010011101011111101000101110000111100111010100110" +
     "1101000101101111110101111001000011011010110000011011010001100110010110" +
     "1101111010110011110001001010010111111100001111101101010000000111110111" +
     "1101100001010110111011011100011110110010111001000001010110100011010010" +
     "0101111010010100110001010100001101111101101111111101010000001001011100" +
     "0001101110100111110100001111101100000100001010001000010011011101101010" +
     "0110100001011100011011010111110110000001011001000110101010111001111100" +
     "1001110101100100001111100100100110010111111101101000110101100111001101" +
     "1010001110010010110101001011011100100110001010011100101101011110100111" +
     "1111000100010101101000101000110011111011111000111100100010111110010010" +
     "0111000111111011110010000101111001011001000001101110000000010111011000" +
     "0000110101110100100100000000011110010011011100111001110001111000010000" +
     "0001110001001111111111000100101000100111001101001011100011000110011000" +
     "0001100100101100110110000110011001101111010000110010101101100001111000" +
     "0010001100101111110110111000000100110100010000101011010001111001010011" +
     "0111010000110110110011011011001100000010110111100101101100101010110011" +
     "0110111111100010001000101111100011111000000110000000001010111111100011" +
     "1111111001111100001110110010110111111100011101001110110101110010111110" +
     "1111111001000100001100011000000001101110011110001001011111111111010010" +
     "0100110001100000111101110101110011011000111111001000000001000011011011" +
     "0101011111000000010100011001000000000101010100101000011001111010010111" +
     "1110100001101110110111111100000000000010001001011011000001000111000110" +
     "1100011001010111110000011010011111111101100101110001000100001010100101" +
     "1001110111111111000011011111101010110011111110011110001000100011100110" +
     "1101110111100001000010111110000101111111101110101000011000011001100001" +
     "0010101110001010110111111101001111011001101000001010010001001101001000" +
     "0001011110011010110101001111111001001000010100111111000001010110101100" +
     "1000001000111011000110001001010001011010110001011111011011111100010110" +
     "1100010011111101100111100101110001001011100111100011100001111001011100" +
     "1000101110000100010010000110100110010001111011111001111010111111101011" +
     "0111110111100011100011100001110000100000001100101001001100000100011011" +
     "0110110100001110110000110110011011011010111101110010011000110101111101" +
     "1010011111001011011111100010011010010001001110001011000011110100100000" +
     "1001011100000000101010000101010001011010100100001000100110100011000011" +
     "0110000010101000010110011100001100110101010011111011110101100101010000" +
     "1001001101111111011001001011010101101011110000111011001110000110100000" +
     "0000011110101101110000111001011001101111010110001111100100110110000111" +
     "1110001101010100101000001110010101101011100000100100100110010110110111" +
     "1100000110011010100010010011011011011111010000010010010000100000100101" +
     "1001001100110101000111011110101011011000110011000001101001101011110100" +
     "1000110010110100110000101000100000110110111111001101100000001111011010" +
     "0101110010001000111000000001110111011011111100111010000110011101001111" +
     "1101011110011101110100011011111010010111000110001111000011011000111000" +
     "0000001100011100100110001011101000100001100011001110100011111100101001" +
     "0000110110101100001100000101011011111110101101100010101011010101010110" +
     "1101000011011110001101100010010111011010110000101111111111101111110111" +
     "1111011010101010110001100010110000100100110111110110010100010100110000" +
     "1000001010100011001111010010011100000011100010100001011011100000100110" +
     "1110011111100010010010100001001101101111000100011001010000110101000001" +
     "0000100100011101111011001111011111111000011000110110110100101101100001" +
     "0001010001111011100000011101110101101111100111000111001000001011001100" +
     "1001101110110100100111101111100011111110111010001100100101000010101010" +
     "0111111011000000100111011011001001101000011101011001110001111010110011" +
     "1110111000011001101001000110100011111101001111011111110110010011101110" +
     "0101101100100101101010010110000111011010101011111000100110010001110110" +
     "1111010110010011011010011111000111111010010110000000001110110101100110" +
     "1111011001111000001110110101010101011011000110101110000001110011000110" +
     "1100000101110110101111001000000011111110100010000100000111001011010010" +
     "0101000010010000001010000111101110110110111001011100111110010110101001" +
     "0001100011001101110101100110010100000100000001001011101001011001111010" +
     "0101100000000100111010100101001110110000111000011001000110110101001100" +
     "1001000011100001011100000100011111011110001001000000101001011111011001" +
     "0011101000010100110100111001010100100001101011010100111001111000001110" +
     "1100001111000101010111111101101111001011110000010001111001101000001001" +
     "0010111110110101011101111100001001101111111111101101010101000001011111" +
     "1110000111100110110110011011001110010110000001001000011001100010101110" +
     "1101100100111000100101101000000010010001111001000110010101000111010010" +
     "0101010110001010000101001010011110110111110110000110011001101000111100" +
     "1011011110110000100010101001100011011011010110110000110000011000011111" +
     "1110010100100111110101011010101000000110010100011101000101010110111100" +
     "1001001001010011101000001111011000110110100011000100111010001111101001" +
     "1011000010111000010111100110110000100111000000011111101111100111101000" +
     "0001111100001101001000100101011111111100111100011111101010001101000100" +
     "1001000011000001101000101001111101101010011001001001111010001010000001" +
     "0000011000001000011011100110101011001000110111101010001110100101110110" +
     "1100011011000110011101110101011110110100110110000000011011101001000100" +
     "1000100111100100010111110101101001101110101001101101111101101001011010" +
     "0100101011001000101011101111101110010010111010000011100000100101111010" +
     "0101001011000000001010001000010111111111110001010001111110010110010010" +
     "1101100111011101000110110110010010010001111000010110111001011001111011" +
     "1111011111100101011001100100001110110111110111111001010110100001010100" +
     "1001011110110011110011000001000110110010001110010100000010101110000110" +
     "1111000000000001100101000101110110010011010000010100100001001101011011" +
     "1111010101001101000100001000110110110010010110110111101001110110001101" +
     "1010100001100001000010101100011011011000001011111100101000110011011011" +
     "0110001001001011101100100000000010110111000001110110000011010000011101" +
     "1010110101100011000110001110001110110100001110111100001001010101110100" +
     "1000101000110111000110111001111110010000101011010001001001100010000011" +
     "0101111010000101111100101101001011111110110111011000111111011111001100" +
     "1000101010110011111111111110110101001001001001000100010011101011101011" +
     "1110111100111100000100000001100101101100101111000111101101011001001011" +
     "0100000010110000101010101000101001001001000001111101111101110101111000";
     String givenIV = "00101000011100001010101100011011010";
     String givenKey ="11000111101111110111011011111110010";
     System.out.println("Decrypted Text: ");
     System.out.println(CFB.decrypt(encryptedText, givenKey, givenIV));
}
}