import java.util.Scanner;

public class BLM {
    public static void main(String[] args) {

        String IV = "10001011101011001000110011110000101";
        String IV19 = "1110101100100011001";
        // The scanner takes an input (for now prefereably with no spaces) and converts
        // it into a char array
        // So out methods can use it.
        System.out.println("Enter the plaintext here: ");
        Scanner scan = new Scanner(System.in);
        String input = scan.next();
        scan.close();
        // { 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0,
        // 0, 1, 1, 0, 0, 0, 1, 0, 0, 1 };
        // Make a string of 1's and 0's first and then convert to a char array cause
        // this is easier than typing out
        // all the commas for the key. Also there is a weird interaction when typing
        // integers into a char array
        // when trying to reconvert those integers into numbers again.
        String key = "11010101010100010101111010010010101";

        // ECB Encryption
        System.out.println("--------------------------------ECB--------------------------------");
        System.out.println("Encrypted Text: ");
        String encryptedText = ECB.encrypt(input, key);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(ECB.decrypt(encryptedText, key));

        // CBC Encryption
        System.out.println("--------------------------------CBC--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = CBC.encrypt(input, key, IV);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(CBC.decrypt(encryptedText, key, IV));

        // CFB Encryption
        System.out.println("--------------------------------CFB--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = CFB.encrypt(input, key, IV);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(CFB.decrypt(encryptedText, key, IV));

        // OFB Encryption
        System.out.println("--------------------------------OFB--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = OFB.encrypt(input, key, IV);
        System.out.println(encryptedText+ "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(OFB.decrypt(encryptedText, key, IV));

        // CTR Encryption
        System.out.println("--------------------------------CTR--------------------------------");
        System.out.println("Encrypted Text: ");
        encryptedText = CTR.encrypt(input, key, IV19);
        System.out.println(encryptedText + "\n");
        System.out.println("Decrypted Text: ");
        System.out.println(CTR.decrypt(encryptedText, key, IV19));

        // The 1-bit error, For this test we encrypted: "Potato"

        // ECB encryption:
        // 0100000101100110101010100101000101111001110100100010101111010010010101
        String ECBErrorText = "0110000101100110101010100101000101111001110100100010101111010010010101";
        System.out.println("\nECB Error: " + ECB.decrypt(ECBErrorText, key));

        // CBC encryption:
        // 1111000000010011001110111100111101110110000100100110011100111101011010
        String CBCErrorText = "1111000100010011001110111100111101111110000100100110011100111101011010";
        System.out.println("CBC error: " + CBC.decrypt(CBCErrorText, key, IV));

        // CFB encryption:
        // 0101100010110110110010001110110011100100111010010011110111011110000011
        String CFBErrorText = "0101100010110110110010001110100011101100111010010011110111011110000011";
        System.out.println("CFB error: " + CFB.decrypt(CFBErrorText, key, IV));

        // OFB encryption: 010110001011011011001000111011001110010011
        String OFBErrorText = "010110001011011011001010111011001110010011";
        System.out.println("OFB error: " + OFB.decrypt(OFBErrorText, key, IV));

        // CTR encryption: 010010101001110010000110000111101000011010
        String CTRErrorText = "010010101001110000000110000111101000011010";
        System.out.println("CTR error: " + CTR.decrypt(CTRErrorText, key, IV19));

    



     // OFB Encryption
     System.out.println("--------------------------------Group decryption--------------------------------");
     encryptedText = "0100100111100000100100110010110010001011111110101101010010100001001001" +
     "0001100101101110110010101001001011011001110101101100110100000000100101" +
     "1001110110000110010100000010000100111001110100101110101001001000101000" +
     "1011111011011010010110111101001001001101110110110010100110000011000101" +
     "1011100000010010110110001000100100111100110011110100011011111100000110" +
     "1110110100100101011110010101101011011010100001111001011011100001001111" +
     "1010110010001001000001011100001001011100111111001100010001010101011110" +
     "1001110111101010110011000011000001101101110011110101011101001101101110" +
     "1110100110010010111000010100011001010111011011101010000000001110111010" +
     "0111010011000110000001010001010000010110101000101000010001100000001001" +
     "0101001110100110001000001101000101011010001000011101100001110111001010" +
     "0110000010110111001000001001011001101100010000010011101100000111011000" +
     "0100100000000011101101100100010001101101011010001001011010110101001010" +
     "0110111011000000001100101000110111001110110010110001100010111110011111" +
     "0111100011110010001111000100011110010010110000000011011000001110000111" +
     "0011010001110010110010000110011001010110010101101111100010111100100110" +
     "0011000100110000000010001100011100111111011101100110001010110110000101" +
     "0110011101101100111101001001010100011100010011100110101100000100000100" +
     "0011111000101100111010101111111111111110110001010010110111000110101100" +
     "0000010100000011101100111110101010101110011001001011001011001011110001" +
     "0011000101001100001101000010100001001011010011101011001100001000100100" +
     "1100011100101100001011001010011010001101000110010010010111011000111100" +
     "0011000010010001001010001110010111010111100110111100110111011110101001" +
     "0011101111011101110101001110111001101110111011101100100001010111111100" +
     "1000100000101011111001000100011001001010100001111010100111110011111111" +
     "0000111110110101000011001101100111110111100100000010100011110101011011" +
     "0100000010001011111101101001100010110110101001110010100001011101011011" +
     "1110011010111111110010001110111100010100101010010010100101110101110001" +
     "1000101011101011100101011100111000000000001010010101111011011101011101" +
     "0001111011100110001111100011010011100111101101101101101000011011010001" +
     "0001000110010110110001100000111011010100001000000110010100001011010000" +
     "0001110110100001000011100001101100010001111001101011101101100000010000" +
     "1110110110111010011111111000010111011110101100011011100011010000000011" +
     "0111101001100000001110100001101011111001111100000110001011100110010100" +
     "1010101001011000111001100011011010011001000101110111110111110011010010" +
     "1000111110000000111010110001111110111010101111001011000110010111010110" +
     "0000111110111000111000001111101100101011110111000100000110001011100100" +
     "1010101111111110001010011111001010101100001101101110101001111100101001" +
     "0011011110010010110100110011001011101100010111110111110111100001001001" +
     "0011001100101110100011011101100111111111010001000000100111111011001001" +
     "1101000101001101011111011101000010111101100001001001011101111111011001" +
     "1001101011010001110111011011001000011001001111011100010000111011000100" +
     "1000100011010110101101010100000111011011010000111101010001011100111110" +
     "1110011111000110100000001000010010000101111011101000010100110101110001" +
     "0101000111000010101110010000010111100110011011100000011001101101001010" +
     "0101000010011010101000010110100000101110101110010001000001101101000001" +
     "0110000010001111001001000101011010011100000010001111111000000001000101" +
     "0101100001011011100011101001010111011101010010110111111010101100000100" +
     "1100000010010100111011101101010111111111110001100000001110010100010010" +
     "0111110011000010101011000100011110010001100010111111100000100000010000" +
     "0000010001101110100000010001111110010111101101110011010110101100100110" +
     "0011000101101010110111001001000001001010010101000110011110100110011000" +
     "1111000100101000001000001100111111111111100000001110010010101110011011" +
     "0010101100001000000010111101111111110100110001010010000011011111101001" +
     "0110111101101001110100111101101111001011110011101010011111010111101011" +
     "0010110001001001110101000110101000101011111001001011011110010111110111" +
     "0001011100001110101100011110011101001010010101110010011111010100101100" +
     "0001101111000101110101001111011101100011000101010101000011001110101001" +
     "0001011110110111011101000111111001101110111011101100100001010111111011" +
     "0010001000101011111011011111011110101110010001111011111101010100111000" +
     "0001001110110001000110010100000011100100100011010010000011111111000111" +
     "0101100110001111001001100001001010110110111011011011111101000000011110" +
     "1000110010010111110011000001110011100100111010001011100111101101100000" +
     "0000000011110101010010001100001100000010100010100000100111110111001011" +
     "1001110111011110011101111000111010110011101111110001111100011101011001" +
     "0010110110101110001011100000111001110100001011100010101001110010011001" +
     "0000111111000101000011100001100110110111000001100000110011110000001101" +
     "0111001110100000001111101110111101011011001111100011101011110011000111" +
     "1110010001000110100100111000100010111000000100100110111101101101010101" +
     "1001100001001110011110000011111110110001000101010011001111101011000001" +
     "0001010111001010111000111110111101011000001101110111010010101100001100" +
     "1000010111010010110011011011101010111000000111001100010110001001100100" +
     "1010001111001110011101011011000111001011110101000010101101000000111111" +
     "1010010111010110101000111001000001011101000111010110010111111001000011" +
     "1001101000010010101100010011000011111111000011110101101101100001000011" +
     "1111000100010111101011011101011100011010100011000000111011100001001011" +
     "1000010010101001101111010001101011111000000111100001000001000010001100" +
     "1010101111110110101110000110000011011100010011011101110101010001101010" +
     "1101000111111110101111000110010111000101011011101101100010000110101100" +
     "1110101111000010001010011000010110100111110010101000111101000110001111" +
     "0101001010011100100110000010000011011010001000111001111001101011001010" +
     "1100011110010101000010110110010111111101001000110010110100100101000011" +
     "0100101101111101001011101000010100101110110011001010101110011000000010" +
     "0100101011010110101011111100110000011101010000000000001100100101010011" +
     "1110010001101000100000000100111001110111110000000111100000110110011110" +
     "0000011101001110101000001101011100000011011001000111100010001000101000" +
     "0011000100101110101010101011010111001111001100110110001100111001001001" +
     "1111000111110100000110000111011000011010101001000110111110011010000110" +
     "0011011000011100010101111011011110111111000000000010100001010001101001" +
     "0010101100010101100110110001001101101100000000110010011011000010100101" +
     "1011011101110100110101001001100011101101110001100010010000010101100101" +
     "1000101100011010101100011001010011001011110110111010110001000100111110" +
     "0000010110101001100010001010010101100101110110001100001101000101111101" +
     "0010100110000101110101011100010011101011101000110101110101100110101000" +
     "0000011100111111011111000010011111101110111000100110110111110111010110" +
     "0000001110000101011000011000100000100001110000000011001101110011001101" +
     "1111001110000111111010100000100011100100101000111010100101011101001100" +
     "1100000011101011110111000111111000010101110011000110110010011101111000" +
     "0000000010000001001111000000011111100000001011111001101111111100011000" +
     "0001111110110100000011101001011010010111011100100101101000100011001100" +
     "0001100110101110100111100000110001010101101011010110001010101110011001" +
     "0001010110111011111010101000110101110110101001001010101101101110000101" +
     "0110011111111110010111110100110000011011101111111110011001111001001111" +
     "0111011001010110000101101100100001011111100101111010101011110011011000" +
     "1000110101101110011110100010111100010000111101100111010111101111010011" +
     "0001111111111000100110110011111001111010110111101111111010101111010100" +
     "0010000111010110111110010011101001111111001101100100101110011110100101" +
     "1010110111111110001010011100101101001001100111001010101101100011101101" +
     "1001101111001110011010101100101101101100100110010111101111100101001000" +
     "1001101100001010010100010001000011110111000011010100010111111001001001" +
     "1110110100010101111100010011101011011100110011010001011101001001010101" +
     "0001111111000001001011011101001111011101000111101100010001000011001101" +
     "1000101011010110000001000011000000011100000011100101110111010111110011" +
     "1110100110001110100000000101110000100000110010001000100000010101110011" +
     "0100011011011100100110011000010111110110101000001000000001101001001010" +
     "0101110010100010100000001110000100011010001001001000110101111011001011" +
     "0110000010101011011110000001110011111001010010001011000110100111011001" +
     "0110110001011011000001110101110011111011100011111011110110100110001111" +
     "0110011111000100101101100111110101111100100001011001011100111100000111" +
     "0111111111001110001000000000111100100010010000111011110100000110000101" +
     "1011000101001111101100001100011001010000101110011111100010000010101100" +
     "0010001101111000001110001101010111001110010101000101111010110110001000" +
     "0110011001100100111111001001011100011010100001101110001010100010010000" +
     "1010000000010000001110110101011100011110000010001011000001001000101000" +
     "0011110101011111101100111001101011101010000001111011001011111010100101" +
     "1011001100000000110011011111101101101100000011010110111000010100100110" +
     "1100010000001000100000001111011011101010101111011011010011010100111101" +
     "1001011111011101101110000010011110010111100101000100010111110110101000" +
     "1011110010010011010001001010010010101110011001110100000101011111101100" +
     "1001000110100111101001011000011110001011001001010011101001100001101100" +
     "0000000010001001001100010100000010100110110000011010111111111101010110" +
     "1111000110011111100100101100000001010000001000110010001001000000011110" +
     "1001011010001111101001000101011010110111111011001010001111100011110101" +
     "0000001111100111000011011110010010100111001000000000110011110111001100" +
     "0001011111110100011010101100011110110110111111110101101000110111010101" +
     "0001011111101010010000101111111101110011000001110110100000110110000101" +
     "0010111111001011001100101111110101100011111000000010011011111000000110" +
     "1110110111101100001111101110110110111110111101001010111111111111001011" +
     "0111011001000010000001100000001011011110100110100110111111101111010000" +
     "1011011101011100111000101100110000110101000100000111010011100110001110" +
     "1000111100001100101000111000111100001011111010011111100010001111001011" +
     "1000010111111110111010010110101001101011110100101100011110100110101101" +
     "1000110111001100010110011101001010101101011101101110101011100000100011" +
     "1010010111010110110101110101001111101001100110100110011111111100001101" +
     "1010110100001000111110010000100100011110100001000101110111101011010100" +
     "0101111000000000011110110101011001101000110111110010101100101000101100";
     String givenIV = "01001111000001001001100101100100000";
     String givenKey ="11000111101111110111011011111110010";
     System.out.println("Decrypted Text: ");
     System.out.println(OFB.decrypt(encryptedText, givenKey, givenIV));
}
}